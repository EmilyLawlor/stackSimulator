# Directory structure
.git - git repository
.idea - directory containing all project specific settings(created automatically by IntelliJ IDE)  
lib - junit and hamcrest jar files needed for junit testing with ant  
src - Simulator and Stack java classes  
testing - test class with JUnit methods to test stack functionalities  
text - directory containing all test files needed, i.e. manifest.txt  
build.xml - ant build file to deploy project  
simulator.bat - script file to run main class  
documentation - The JavaDoc comments will be generated into HTMl documentation by ant and will be stored in this folder  
out - directory generated by ant build will contain multiple directories:  
- bin - Main.jar, jar file created by ant containing all java classes need  
- classes - this will contain all the compiled classes
- JUnitTestReports - the reports for running the JUnit tests will be stored in this folder
  
# Branches
java - java implementation in source files created on this branch
testing - used to implement JUnit tests for the java classes  
documentation - all documentation, including JavaDoc comments, added on this branch  
driver Script - used to create and test script files needed 
Build tools - ant build file which automates all main tasks of project

# Workflow
[HEAD logs](.git/logs/HEAD) - all commits made can be found in this file  
[Branch logs](.git/logs/refs/heads) - commits made to different branches stored in this directory (name of file matches 
    name of the branch)   
[Git log](text/log.txt) - log of all commits with date and commit message 



# Coding Conventions
follows the java coding conventions available at [oracle.com](https://www.oracle.com/technetwork/java/codeconventions-150003.pdf) 
introduced September 12, 1997, in the Java Language Specification 

# Build Command
After downloading tarred project files, first uncompress  
from the top-level directory "project":  
$ ant deployment
navigate to home directory  
then into the project folder created:  
$ cd project  
uncompress project.tgz:  
$ tar zxvf project.tgz  
give script execute permissions:  
$ cd scripts
$ chmod +x simulator.sh
$ cd ..
from project directory call script with command sequence:  
$ ./scripts/simulator.sh <command sequence>

example:  
$ ./scripts/simulator.sh push 1 push 2 push 3 show pop show   
OUTPUT:  
$ 3  
$ 2  
$ 1  
$   
$ 2  
$ 1  
$  

# AOB
Once the project.tgz is uncompressed, and the ant build file run, all files generated by the build file will be found in
that project directories in either the out or documentation subdirectories  
Files needed to run project will project installed in project.tgz file in a folder named project in the users home 
directory  

